{"version":3,"file":"static/js/691.12c2035f.chunk.js","mappings":"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","sources":["api.js","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/Searchbar.module.css?defa","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '254171825383f2a3466dbbca546aa0a7';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\nasync function getPopularMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n\n    return data.results;\n  } catch (error) {}\n}\n\nasync function getMovieByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\nasync function getMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\nasync function getMovieActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\nasync function getMovieReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getPopularMovies,\n  movieById: getMovieById,\n  getReviews: getMovieReviewsById,\n  getCast: getMovieActorById,\n  getMovieByName: getMovieByName,\n};\n\nexport default apiGet;\n","import { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`}>{movie.title || movie.name}</Link>\n        </li>\n      ))}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__qQ56-\"};","import React, { useState, useCallback } from 'react';\nimport s from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleInputChange = useCallback(event => {\n    setSearchTerm(event.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    event => {\n      event.preventDefault();\n      if (searchTerm) {\n        onSubmit(searchTerm);\n      }\n    },\n    [onSubmit, searchTerm]\n  );\n\n  return (\n    <header className={s.Searchbar}>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">Search</span>\n        </button>\n        <input\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          value={searchTerm}\n          onChange={handleInputChange}\n          name=\"search\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n\n// import { Wrapper, Input, Icon } from './SearchBox.styled';\n\n// export const SearchBox = ({ value, onChange }) => {\n//   return (\n//     <Wrapper>\n//       <Icon />\n//       <Input\n//         type=\"text\"\n//         value={value}\n//         onChange={e => onChange(e.target.value)}\n//       />\n//     </Wrapper>\n//   );\n// };\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/SearchBar/SearchBar';\nimport apiGet from '../api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nexport default function Movie() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  // const [searchMovie, setSearchMovie] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const onChangeQuery = newSearchMovie => {\n    if (newSearchMovie.trim() === '' || newSearchMovie === searchParams) {\n      return;\n    }\n\n    setSearchParams({ query: newSearchMovie });\n  };\n\n  useEffect(() => {\n    if (query !== null) {\n      (async () => {\n        try {\n          setLoading(true);\n          const movieList = await apiGet.getMovieByName(query);\n          setMovieList(movieList);\n        } catch (error) {\n          console.error(error.message);\n          setError(true);\n        } finally {\n          setLoading(false);\n        }\n      })();\n    }\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      {error && <b>OOPS, ERROR!</b>}\n      {loading && <b>Loading Movies</b>}\n      {movieList.length > 0 && (\n        <>\n          <h1>Movie List</h1>\n          <MovieList movies={movieList} />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","getPopularMovies","axios","api_key","language","data","results","getMovieByName","name","query","getMovieById","id","getMovieActorById","cast","getMovieReviewsById","page","apiGet","popular","movieById","getReviews","getCast","MovieList","movies","map","movie","to","title","onSubmit","useState","searchTerm","setSearchTerm","handleInputChange","useCallback","event","target","value","handleSubmit","preventDefault","className","s","type","autoComplete","autoFocus","placeholder","onChange","Movie","useSearchParams","searchParams","setSearchParams","get","movieList","setMovieList","loading","setLoading","error","setError","useEffect","console","message","newSearchMovie","trim","length"],"sourceRoot":""}