{"version":3,"file":"static/js/76.12a8dcb4.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '254171825383f2a3466dbbca546aa0a7';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\nasync function getPopularMovies() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n\n    return data.results;\n  } catch (error) {}\n}\n\nasync function getMovieByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\nasync function getMovieById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\nasync function getMovieActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\nasync function getMovieReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getPopularMovies,\n  movieById: getMovieById,\n  getReviews: getMovieReviewsById,\n  getCast: getMovieActorById,\n  getMovieByName: getMovieByName,\n};\n\nexport default apiGet;\n","// extracted by mini-css-extract-plugin\nexport default {\"Cast_container\":\"Cast_Cast_container__TLSlV\",\"Cast_title\":\"Cast_Cast_title__HvTvp\",\"Cast_list\":\"Cast_Cast_list__M6Kz+\",\"Cast_item\":\"Cast_Cast_item__GI-Mr\",\"Cast_info\":\"Cast_Cast_info__pmLyx\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport apiGet from '../../api';\nimport s from './Cast.module.css';\nimport placeholderImage from '../../servis/images.jpeg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castDetails = await apiGet.getCast(movieId);\n        setCast(castDetails);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className={s.Cast_container}>\n      {cast && (\n        <>\n          <h1 className={s.Cast_title}>Cast</h1>\n          <ul className={s.Cast_list}>\n            {cast.map(actor => (\n              <li key={actor.id} className={s.Cast_item}>\n                <p className={s.Cast_info}>Actor: {actor.name}</p>\n                <p className={s.Cast_info}>Role: {actor.character}</p>\n                <img\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                      : placeholderImage\n                  }\n                  alt=\"\"\n                  width={200}\n                  height={300}\n                />\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","getPopularMovies","axios","api_key","language","data","results","getMovieByName","name","query","getMovieById","id","getMovieActorById","cast","getMovieReviewsById","page","apiGet","popular","movieById","getReviews","getCast","Cast","movieId","useParams","useState","setCast","useEffect","fetchCast","castDetails","console","error","message","className","s","map","actor","character","src","profile_path","placeholderImage","alt","width","height"],"sourceRoot":""}